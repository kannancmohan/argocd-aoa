# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: test-ingress
#   annotations:
#     cert-manager.io/cluster-issuer: default-root-cert-issuer
#     nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
#     nginx.ingress.kubernetes.io/use-regex: "true"
#     nginx.ingress.kubernetes.io/rewrite-target: /$2
#     # nginx.ingress.kubernetes.io/ssl-redirect: "false"
#     # nginx.ingress.kubernetes.io/enable-cors: "true"
#     # nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
#     # nginx.ingress.kubernetes.io/cors-allow-origin: '$http_origin'
#     # nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
#     # nginx.org/rewrites: "serviceName=argocd-server rewrite=/"
#     # nginx.ingress.kubernetes.io/ssl-redirect: "false"
#     # nginx.ingress.kubernetes.io/ssl-passthrough: "true"
#     # nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
#     # ingress.kubernetes.io/app-root: "/"
#     # nginx.ingress.kubernetes.io/ssl-passthrough: "true"
#     # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
#     # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
#     # nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
# spec:
#   ingressClassName: nginx
#   rules:
#   - host: argocd.dev.local
#     http:
#       paths:
#       - path: /argocd(/|$)(.*)
#         pathType: ImplementationSpecific
#         backend:
#           service:
#             name: argocd-server
#             port:
#               name: http
#       # - path: /grafana/
#       #   pathType: Prefix
#       #   backend:
#       #     service:
#       #       name: grafana
#       #       port:
#       #         number: 80
#   tls:
#   - hosts:
#     - argocd.dev.local
#     secretName: argocd-server-tls