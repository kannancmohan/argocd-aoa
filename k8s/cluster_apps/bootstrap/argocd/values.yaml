argo-cd:
  # global:
  #   domain: &host argocd.local.info
  dex:
    enabled: false
  # notifications:
  #   enabled: false
  # applicationSet:
  #   enabled: false
  configs:
    params:
      server.insecure: true
    secret:
      argocdServerAdminPassword: "$2a$10$oRPU/09Terdo4pBYlCwSz.8S13d.vhjUjxv1uil0OM3IXc7tZOqV6"
  server:
    # extraArgs:
    #   - --insecure
    # Added based on https://kubito.dev/posts/enable-argocd-sync-wave-between-apps/
    config:
      # resource.ignoreResourceUpdatesEnabled: true
      # resource.customizations.ignoreResourceUpdates.all: |
      #   jsonPointers:
      #     - /status
      resource.customizations.health.argoproj.io_Application: |
        hs = {}
        hs.status = "Progressing"
        hs.message = ""
        if obj.status ~= nil then
          if obj.status.health ~= nil then
            hs.status = obj.status.health.status
            if obj.status.health.message ~= nil then
              hs.message = obj.status.health.message
            end
          end
        end
        return hs
    ingress:
      enabled: false
      ingressClassName: nginx
      annotations:
        # traefik.ingress.kubernetes.io/router.entrypoints: websecure
        cert-manager.io/cluster-issuer: default-root-cert-issuer
        nginx.org/rewrites: "serviceName=argocd-server rewrite=/"
        # nginx.ingress.kubernetes.io/rewrite-target: /
        # nginx.ingress.kubernetes.io/enable-cors: "true"
        # nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
        # nginx.ingress.kubernetes.io/cors-allow-origin: '$http_origin'
        # nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
        # nginx.ingress.kubernetes.io/rewrite-target: /$2
        # nginx.ingress.kubernetes.io/use-regex: "true"
        # nginx.ingress.kubernetes.io/ssl-redirect: "false"
      hostname: &host argocd.dev.local
      # extraHosts:
      #   - name: &host argocd.local.info
      #     path: /
      #     pathType: Prefix
      extraPaths:
        - path: /gitops/(.*)
          pathType: Prefix
          backend:
            service:
              name: argocd-server
              port:
                number: 80
        # - path: /
        #   pathType: Prefix
        #   backend:
        #     service:
        #       name: argocd-server
        #       port:
        #         number: 80
      extraTls:
        - secretName: argocd-server-tls
          hosts:
            - *host
    # metrics: &metrics
    #   enabled: true
    #   serviceMonitor:
    #     enabled: true
