apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: stripprefix
spec:
  stripPrefix:
    prefixes:
      - /argocd
# ---
# apiVersion: traefik.containo.us/v1alpha1
# kind: Middleware
# metadata:
#   name: redirect-http-https
# spec:
#   redirectScheme:
#     scheme: https
#     permanent: true
# ---
# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRoute
# metadata:
#   name: argocd-http
#   namespace: argocd
# spec:
#   entryPoints:
#     - web
#   routes:
#   - kind: Rule
#     match: Host(`argocd.dev.local`) && PathPrefix(`/argocd`)
#     priority: 10
#     middlewares:
#       - name: redirect-http-https
#       - name: stripprefix
#     services:
#       - kind: Service
#         name: argocd-server
#         passHostHeader: true
#         port: http
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: argocd-https
  namespace: argocd
  # annotations:
  #   traefik.ingress.kubernetes.io/router.middlewares: traefik-redirect-to-https@kubernetescrd
  #   cert-manager.io/cluster-issuer: default-root-cert-issuer
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      # match: Host(`argocd.dev.local`) && PathPrefix(`/argocd`)
      # match: Host(`argocd.dev.local`)
      match: Host(`192.168.0.61`) && PathPrefix(`/argo`)
      priority: 10
      services:
        - kind: Service
          name: argocd-server
          # passHostHeader: false
          port: http
          namespace: argocd
      middlewares:
        - name: stripprefix
    - kind: Rule
      # match: Host(`argocd.dev.local`) && Headers(`Content-Type`, `application/grpc`)
      # match: Host(`argocd.dev.local`) && PathPrefix(`/argocd`) && Headers(`Content-Type`, `application/grpc`)
      match: Host(`192.168.0.61`) && PathPrefix(`/argo`) && Headers(`Content-Type`, `application/grpc`)
      priority: 11
      services:
        - kind: Service
          name: argocd-server
          # passHostHeader: false
          port: http
          scheme: h2c
          namespace: argocd
      middlewares:
        - name: stripprefix
  tls:
    # certResolver: default-root-cert-issuer
    secretName: argocd-server-tls